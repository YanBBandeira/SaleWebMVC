@model SalesWebMVC.Models.ViewModels.ProfilesEditViewModel;

@{
    ViewData["Title"] = "Edit Profile";
    var roles = ViewBag.Roles as List<string>;
}

<h2>@ViewData["Title"]</h2>
<div class="card-body">
    <div class="form-group">
        <div class="box-form">
            <div class="title-form toggle" id="DadosBase">
                <span>Info</span>
            </div>
            <div class="content-form" id="content_DadosBase">
                <form asp-action="Edit" method="post">
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="FullName" class="form-label"></label>
                        <input asp-for="FullName" class="form-control" />
                        <span asp-validation-for="FullName" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="Email" class="form-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    @* Só permite alterar o papel se for Admin ou Manager *@
                    @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                    {
                        <div class="mb-3">
                            <label asp-for="Role" class="form-label"></label>
                            <select asp-for="Role" class="form-select" id="roleSelector">
                                @foreach (var role in roles.Where(r => r != "Admin"))
                                {
                                    <option value="@role" selected="@(role == Model.Role)">
                                        @role
                                    </option>
                                }
                            </select>
                            <span asp-validation-for="Role" class="text-danger"></span>
                        </div>
                    }
                    else
                    {
                        @* Usuários comuns não podem alterar a Role, mas o valor ainda precisa ser enviado *@
                        <input type="hidden" asp-for="Role" />
                    }
                    @if (ViewBag.CurrentUserId == Model.Id)
                    {
                        <div class="mb-3">
                            <label asp-for="CurrentPassword" class="form-label">Senha atual</label>
                            <input asp-for="CurrentPassword" class="form-control" type="password" />
                            <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        </div>
                    }

                    <div class="form-group mb-3">
                        <label asp-for="NewPassword" class="form-label"></label>
                        <input asp-for="NewPassword" class="form-control" type="password" autocomplete="" />
                        <span asp-validation-for="NewPassword" class="text-danger"></span>
                    </div>
                    <div class="form-group mb-3">
                        <label asp-for="ConfirmPassword" class="form-label"></label>
                        <input asp-for="ConfirmPassword" class="form-control" type="password" autocomplete="" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a asp-action="Index" class="btn btn-secondary m-2">Back to List</a>
                </form>
            </div>
        </div>
    </div>
</div>

